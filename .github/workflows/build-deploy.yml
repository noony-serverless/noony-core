name: Build, Deploy & Version Bump

on:
  # Temporarily disabled to avoid conflicts with release.yml
  # push:
  #   branches:
  #     - main
  #     - master
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.NOONY_NPM_TOKEN }}
          fetch-depth: 0

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@noony-serverless'

      # Cache dependencies
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

    #   # Run tests
    #   - name: Run tests
    #     run: npm test

      # Run linting
      - name: Run linting
        run: npm run lint

      # Build the project
      - name: Build project
        run: npm run build

      # Configure Git for version bump
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      # Publish to GitHub Packages
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NOONY_NPM_TOKEN: ${{ secrets.NOONY_NPM_TOKEN }}

      # Bump version for next release
      - name: Bump version
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Bump patch version
          npm version patch --no-git-tag-version
          
          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
          # Commit version bump
          git add package.json package-lock.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push origin ${{ github.ref_name }}

      # Create GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          NOONY_NPM_TOKEN: ${{ secrets.NOONY_NPM_TOKEN }}
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          release_name: Release v${{ steps.get-version.outputs.version }}
          body: |
            ## Changes
            
            This release includes the latest changes from the main branch.
            
            ### Package Information
            - Package: `@noony-serverless/core`
            - Version: `${{ steps.get-version.outputs.version }}`
            - Registry: GitHub Packages
            
            ### Installation
            ```bash
            npm install @noony-serverless/core@${{ steps.get-version.outputs.version }}
            ```
          draft: false
          prerelease: false

      # Get version for release
      - name: Get current version
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
