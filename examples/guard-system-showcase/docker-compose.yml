version: '3.8'

services:
  # Redis for advanced caching demonstrations
  redis:
    image: redis:7-alpine
    container_name: noony-guard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: noony-guard-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    profiles: ["monitoring"]

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: noony-guard-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    profiles: ["monitoring"]

  # Application container (for production deployment testing)
  app:
    build: .
    container_name: noony-guard-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - ENABLE_REDIS_CACHE=true
      - ENABLE_PROMETHEUS_METRICS=true
    depends_on:
      - redis
    profiles: ["production"]

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: noony-guard-network